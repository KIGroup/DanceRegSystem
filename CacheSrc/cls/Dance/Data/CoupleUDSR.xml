<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Dance.Data.CoupleUDSR">
<Super>Dance.Data.Couple</Super>
<TimeCreated>63436,60731.792448</TimeCreated>

<Method name="ConvertToProxyObject">
<FormalSpec>params:%ZEN.proxyObject=""</FormalSpec>
<ReturnType>%ZEN.proxyObject</ReturnType>
<Implementation><![CDATA[
    set proxy = ##super()
    set proxy.type = "UDSR"
    set proxy.otherInfo = proxy.man.otherInfo
    
        
    if (##class(MatchingCoupleUDSRWDSF).UDSRIdxExists(..%Id())){
        set coupleWDSF = ##class(MatchingCoupleUDSRWDSF).UDSRIdxOpen(..%Id()).WDSF
        set proxy.idWDSF = coupleWDSF.%Id()
        set proxy.man.idWDSF = coupleWDSF.Man.%Id()
        set proxy.man.numberWDSF = coupleWDSF.Man.Number
        set proxy.woman.idWDSF = coupleWDSF.Woman.%Id()
        set proxy.woman.numberWDSF = coupleWDSF.Woman.Number
    }
    
    if (proxy.otherInfo.club = "") {
        set proxy.otherInfo.club = proxy.woman.otherInfo.club 
    }
    
    if (proxy.otherInfo.city = "") {
        set proxy.otherInfo.city = proxy.woman.otherInfo.city 
    }
    
    quit proxy
]]></Implementation>
</Method>

<Method name="GetByNumbers">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[manNumber:%String,womanNumber:%String,&st]]></FormalSpec>
<ReturnType>Couple</ReturnType>
<Implementation><![CDATA[
    set st = $$$OK
    #dim obj As CoupleUDSR = ""
    
    set (coupleId, SQLCODE) = ""
    &sql(SELECT ID INTO :coupleId FROM Dance_Data.CoupleUDSR WHERE (Man->Number = :manNumber AND Woman->Number = :womanNumber) OR (Man->Number = :womanNumber AND Woman->Number = :manNumber))
    if (SQLCODE = 0){
        return ..%OpenId(coupleId,,.st)
    }
    
    set obj = ..%New()
    set obj.Man = ##class(PersonUDSR).NumberUDSRIdxOpen(manNumber,,.stMan)  
    set obj.Woman = ##class(PersonUDSR).NumberUDSRIdxOpen(womanNumber,,.stWoman)    
    
    if $$$ISERR(stMan){
        set st = ##class(Dance.Utils.Msg).GetErrorStatus("error_PersonUDSRNotFound", " | Male "_manNumber)
        quit $$$NULLOREF
    }
    
    if $$$ISERR(stWoman){
        set st = ##class(Dance.Utils.Msg).GetErrorStatus("error_PersonUDSRNotFound", " | Female "_womanNumber)
        quit $$$NULLOREF
    }
    
    if (obj.Man.Gender = "Female") && (obj.Woman.Gender = "Male"){
        set womanTmp = obj.Man
        set obj.Man = obj.Woman
        set obj.Woman = womanTmp
        kill womanTmp
    }
    
    if (obj.Man.Gender '= "Male"){
        set st = ##class(Dance.Utils.Msg).GetErrorStatus("error_PersonUDSRNotFound", " | Male "_obj.Man.Number)
        quit $$$NULLOREF
    }
    
    if (obj.Woman.Gender '= "Female"){
        set st = ##class(Dance.Utils.Msg).GetErrorStatus("error_PersonUDSRNotFound", " | Female "_obj.Woman.Number)
        quit $$$NULLOREF
    }
    

    
    set st = obj.%Save()
    
    quit obj
]]></Implementation>
</Method>

<Method name="GetByFilter">
<ClassMethod>1</ClassMethod>
<FormalSpec>filter:%RegisteredObject</FormalSpec>
<ReturnType>PersonWDSF</ReturnType>
<Implementation><![CDATA[
    do filter.%ToJSON()
    
    set man = ##class(PersonUDSR).GetByFullName(filter.man)
    quit:'$ISOBJECT(man) $$$NULLOREF
    
    set woman = ##class(PersonUDSR).GetByFullName(filter.woman)
    quit:'$ISOBJECT(woman) $$$NULLOREF

    quit ..GetByNumbers(man.Number, woman.Number, .st)
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
</Storage>
</Class>
</Export>
